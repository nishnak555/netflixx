{"ast":null,"code":"var _jsxFileName = \"/home/asus/Documents/netflix-clone/src/components/card.jsx\";\nimport { Card, CardContent, CardMedia, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { ReactComponent as Television } from \"../public/assets/images/\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CustomCard = props => {\n  const {\n    Info,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Enjoy on your TV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Watch on smart TVs, PlayStation, Xbox, Chromecast, Apple TV, Blu-ray players and more.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        children: /*#__PURE__*/_jsxDEV(Television, {\n          style: {\n            width: \"100%\",\n            height: \"140px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = CustomCard;\nexport default CustomCard;\nvar _c;\n$RefreshReg$(_c, \"CustomCard\");","map":{"version":3,"names":["Card","CardContent","CardMedia","Typography","React","ReactComponent","Television","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomCard","props","Info","other","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","_c","$RefreshReg$"],"sources":["/home/asus/Documents/netflix-clone/src/components/card.jsx"],"sourcesContent":["import { Card, CardContent, CardMedia, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { ReactComponent as Television } from \"../public/assets/images/\";\nexport const CustomCard = (props) => {\n  const { Info, ...other } = props;\n\n  return (\n    <>\n      <Card>\n        <CardContent>\n          <Typography>Enjoy on your TV</Typography>\n          <Typography>\n            Watch on smart TVs, PlayStation, Xbox, Chromecast, Apple TV, Blu-ray\n            players and more.\n          </Typography>\n        </CardContent>\n    <CardMedia>\n    <Television style={{ width: \"100%\", height: \"140px\" }} />\n    </CardMedia>\n      </Card>\n    </>\n  );\n};\n\nexport default CustomCard;\n\n\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACxE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,IAAIC,UAAU,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxE,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACnC,MAAM;IAAEC,IAAI;IAAE,GAAGC;EAAM,CAAC,GAAGF,KAAK;EAEhC,oBACEJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACR,IAAI;MAAAe,QAAA,gBACHP,OAAA,CAACP,WAAW;QAAAc,QAAA,gBACVP,OAAA,CAACL,UAAU;UAAAY,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACzCX,OAAA,CAACL,UAAU;UAAAY,QAAA,EAAC;QAGZ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAClBX,OAAA,CAACN,SAAS;QAAAa,QAAA,eACVP,OAAA,CAACF,UAAU;UAACc,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAQ;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACP,CAAC;AAEP,CAAC;AAACI,EAAA,GAnBWZ,UAAU;AAqBvB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}