{"ast":null,"code":"var _jsxFileName = \"/home/asus/Documents/netflix-clone/src/components/button.jsx\";\nimport { Button } from \"@mui/material\";\nimport { red } from \"@mui/material/colors\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomButton = props => {\n  const {\n    startIcon,\n    endIcon,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: startIcon,\n      endIcon: endIcon,\n      ...props,\n      children: props.children || \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = CustomButton;\nexport default CustomButton;\nvar _c;\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"names":["Button","red","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomButton","props","startIcon","endIcon","other","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/asus/Documents/netflix-clone/src/components/button.jsx"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport { red } from \"@mui/material/colors\";\n\nconst CustomButton = (props) => {\n  const { startIcon,endIcon ,...other } = props;\n  return (\n    <>\n      <Button startIcon={startIcon} endIcon ={endIcon} {...props}>\n        {props.children || \"Sign In\"}\n      </Button>\n    </>\n  );\n};\n\nexport default CustomButton;\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,GAAG,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAM;IAAEC,SAAS;IAACC,OAAO;IAAE,GAAGC;EAAM,CAAC,GAAGH,KAAK;EAC7C,oBACEJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA,CAACH,MAAM;MAACQ,SAAS,EAAEA,SAAU;MAACC,OAAO,EAAGA,OAAQ;MAAA,GAAKF,KAAK;MAAAI,QAAA,EACvDJ,KAAK,CAACI,QAAQ,IAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC,gBACT,CAAC;AAEP,CAAC;AAACC,EAAA,GATIV,YAAY;AAWlB,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}