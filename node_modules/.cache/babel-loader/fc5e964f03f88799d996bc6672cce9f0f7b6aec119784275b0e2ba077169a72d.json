{"ast":null,"code":"var _jsxFileName = \"/home/asus/Documents/netflix-clone/src/components/card.jsx\";\nimport { Card, CardActions, CardContent, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { ReactComponent as TelevisionIcon } from \"../assets/images/television.svg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CustomCard = props => {\n  const {\n    Info,\n    customStyles,\n    ...other\n  } = props;\n  console.log(Info, \"info\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        borderRadius: \"1rem\",\n        background: \"linear-gradient(149deg, #192247 0%, #210e17 96.86%)\",\n        width: \"400px\",\n        height: \"300px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          mt: \"5px\",\n          fontWeight: 500,\n          fontSize: \"1.5rem\",\n          color: \"white\",\n          children: Info === null || Info === void 0 ? void 0 : Info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          mt: \"5px\",\n          color: \"rgba(255, 255, 255, 0.7)\",\n          fontSize: \"1rem\",\n          fontWeight: 400,\n          children: Info.Description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        children: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = CustomCard;\nexport default CustomCard;\nvar _c;\n$RefreshReg$(_c, \"CustomCard\");","map":{"version":3,"names":["Card","CardActions","CardContent","Typography","React","ReactComponent","TelevisionIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomCard","props","Info","customStyles","other","console","log","children","sx","borderRadius","background","width","height","mt","fontWeight","fontSize","color","title","fileName","_jsxFileName","lineNumber","columnNumber","Description","Icon","info","_c","$RefreshReg$"],"sources":["/home/asus/Documents/netflix-clone/src/components/card.jsx"],"sourcesContent":["import { Card, CardActions, CardContent, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { ReactComponent as TelevisionIcon } from \"../assets/images/television.svg\";\n\nexport const CustomCard = (props) => {\n  const { Info, customStyles,...other } = props;\nconsole.log(Info,\"info\")\n  return (\n    <>\n      <Card\n        sx={{\n          borderRadius: \"1rem\",\n          background: \"linear-gradient(149deg, #192247 0%, #210e17 96.86%)\",\n          width: \"400px\",\n          height: \"300px\",\n        }}\n      >\n        <CardContent>\n          <Typography\n            mt={\"5px\"}\n            fontWeight={500}\n            fontSize={\"1.5rem\"}\n            color=\"white\"\n          >\n            {Info?.title}\n          </Typography>\n          <Typography\n            mt={\"5px\"}\n            color=\"rgba(255, 255, 255, 0.7)\"\n            fontSize={\"1rem\"}\n            fontWeight={400}\n          >\n         {Info.Description}\n          </Typography>\n        </CardContent>\n\n<Icon>\n  {info}\n</Icon>\n        {/* <TelevisionIcon\n          style={{\n            position: \"relative\",\n            width: 80,\n            height: 80,\n            marginLeft: \"300px\",\n            marginTop: \"100px\",\n          }}\n        /> */}\n      </Card>\n    </>\n  );\n};\n\nexport default CustomCard;\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC1E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,IAAIC,cAAc,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnF,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACnC,MAAM;IAAEC,IAAI;IAAEC,YAAY;IAAC,GAAGC;EAAM,CAAC,GAAGH,KAAK;EAC/CI,OAAO,CAACC,GAAG,CAACJ,IAAI,EAAC,MAAM,CAAC;EACtB,oBACEL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACEV,OAAA,CAACR,IAAI;MACHmB,EAAE,EAAE;QACFC,YAAY,EAAE,MAAM;QACpBC,UAAU,EAAE,qDAAqD;QACjEC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE;MACV,CAAE;MAAAL,QAAA,gBAEFV,OAAA,CAACN,WAAW;QAAAgB,QAAA,gBACVV,OAAA,CAACL,UAAU;UACTqB,EAAE,EAAE,KAAM;UACVC,UAAU,EAAE,GAAI;UAChBC,QAAQ,EAAE,QAAS;UACnBC,KAAK,EAAC,OAAO;UAAAT,QAAA,EAEZL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACbxB,OAAA,CAACL,UAAU;UACTqB,EAAE,EAAE,KAAM;UACVG,KAAK,EAAC,0BAA0B;UAChCD,QAAQ,EAAE,MAAO;UACjBD,UAAU,EAAE,GAAI;UAAAP,QAAA,EAElBL,IAAI,CAACoB;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEtBxB,OAAA,CAAC0B,IAAI;QAAAhB,QAAA,EACFiB;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUK;EAAC,gBACP,CAAC;AAEP,CAAC;AAACI,EAAA,GA/CWzB,UAAU;AAiDvB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}